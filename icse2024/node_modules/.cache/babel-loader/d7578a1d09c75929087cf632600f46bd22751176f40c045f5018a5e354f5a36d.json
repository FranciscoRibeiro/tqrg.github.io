{"ast":null,"code":"var _jsxFileName = \"/Users/sofiareis/tqrg.github.io/icse2024/src/components/pages/Button.js\";\nimport React from 'react';\nimport '../css/Button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large', 'btn--mobile', 'btn--wide'];\nconst COLOR = ['primary', 'secondary', 'transparent'];\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize,\n  buttonColor\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  const checkButtonColor = COLOR.includes(buttonColor) ? buttonColor : COLOR[0];\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`,\n    onClick: onClick,\n    type: type,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","STYLES","SIZES","COLOR","Button","children","type","onClick","buttonStyle","buttonSize","buttonColor","checkButtonStyle","includes","checkButtonSize","checkButtonColor","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sofiareis/tqrg.github.io/icse2024/src/components/pages/Button.js"],"sourcesContent":["import React from 'react'\nimport '../css/Button.css'\n\nconst STYLES = ['btn--primary', 'btn--outline']\nconst SIZES = ['btn--medium', 'btn--large', 'btn--mobile', 'btn--wide']\nconst COLOR = ['primary', 'secondary', 'transparent']\n\nexport const Button = ({\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize,\n    buttonColor\n}) => {\n\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n    const checkButtonColor = COLOR.includes(buttonColor) ? buttonColor : COLOR[0]\n\n\n    return (\n        <button\n            className={`btn ${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`}\n            onClick={onClick}\n            type={type}\n        >\n            {children}\n        </button>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAG,CAAC,cAAc,EAAE,cAAc,CAAC;AAC/C,MAAMC,KAAK,GAAG,CAAC,aAAa,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,CAAC;AACvE,MAAMC,KAAK,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,aAAa,CAAC;AAErD,OAAO,MAAMC,MAAM,GAAGA,CAAC;EACnBC,QAAQ;EACRC,IAAI;EACJC,OAAO;EACPC,WAAW;EACXC,UAAU;EACVC;AACJ,CAAC,KAAK;EAEF,MAAMC,gBAAgB,GAAGV,MAAM,CAACW,QAAQ,CAACJ,WAAW,CAAC,GAAGA,WAAW,GAAGP,MAAM,CAAC,CAAC,CAAC;EAC/E,MAAMY,eAAe,GAAGX,KAAK,CAACU,QAAQ,CAACH,UAAU,CAAC,GAAGA,UAAU,GAAGP,KAAK,CAAC,CAAC,CAAC;EAC1E,MAAMY,gBAAgB,GAAGX,KAAK,CAACS,QAAQ,CAACF,WAAW,CAAC,GAAGA,WAAW,GAAGP,KAAK,CAAC,CAAC,CAAC;EAG7E,oBACIH,OAAA;IACIe,SAAS,EAAG,OAAMJ,gBAAiB,IAAGE,eAAgB,IAAGC,gBAAiB,EAAE;IAC5EP,OAAO,EAAEA,OAAQ;IACjBD,IAAI,EAAEA,IAAK;IAAAD,QAAA,EAEVA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB,CAAC;AAAAC,EAAA,GAvBYhB,MAAM;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}